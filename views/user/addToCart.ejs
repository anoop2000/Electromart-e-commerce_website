<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<%- include("../../views/partials/user/header") %>
<style>
  /* Global settings */
  body {
    padding: 20px;
    font-family: 'HelveticaNeue-Light', 'Helvetica Neue Light', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-weight: 400;
    line-height: 1.6;
    font-size: 16px;
  }
  
  h1 {
    font-weight: 100;
    text-align: center;
    margin-bottom: 20px;
  }
  
  label {
    color: #aaa;
  }
  
  .shopping-cart {
    max-width: 100%;
    margin: 0 auto;
    background-color: #f9f9f9;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    padding: 20px;
    margin-bottom: 500px;
  }
  
  /* Column labels */
  .column-labels {
    display: grid;
    grid-template-columns: 7% 15% 25% 12% 15% 14% 12% ;
    padding-bottom: 10px;
    border-bottom: 1px solid #eee;
    font-weight: bold;
    font-size: 14px;
    text-align: left;
  }
  
  .column-labels label {
    text-transform: uppercase;
  }
  


  /* Product entries */
  .product {
    display: grid;
    grid-template-columns: 7% 15% 25% 12% 15% 14% 12%;
    align-items: center;
    padding: 15px 0;
    border-bottom: 1px solid #eee;
    row-gap: 10px;
  }
  
  .product:last-child {
    border-bottom: none;
  }
  
  .product-image {
    text-align: center;
  }
  
  .product-image img {
    width: 80px;
    height: auto;
    object-fit: contain;
  }
  
  .product-details {
    font-size: 14px;
    width : 250px;
  }
  
  .product-title {
    font-weight: bold;
    margin-bottom: 5px;
    font-size: 17px;
  }
  
  .product-description {
    color: #666;
    font-size: 14px;
  }
  
  .product-price,
  .product-line-price {
    text-align: center;
    font-size: 14px;
    width : 200px;
  }

  .product-quantity{
    width : 300px;
  }
  
  .product-quantity input {
    width: 50px;
    padding: 5px;
    text-align: center;
    border: 1px solid #ddd;
    border-radius: 3px;
  }
  
  .product-removal button {
    background-color: #c66;
    color: #fff;
    border: none;
    padding: 5px 10px;
    border-radius: 3px;
    font-size: 12px;
    cursor: pointer;
    text-transform: uppercase;
  }
  
  .product-removal button:hover {
    background-color: rgb(54, 45, 45);
  }
  
  .remove-btn {
    background-color: #d67172;
    color: #fff;
    border: none;
    padding: 10px 15px;
    border-radius: 5px;
    font-size: 14px;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.remove-btn:hover {
    background-color: #c82039;
}




/*totals container*/
.totals-container {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  margin-top: 20px;
  margin-bottom: 350px;
}


.totals-table-container {
  margin-bottom: 20px;
}

.totals-table {
  width: 300px; 
  border-collapse: collapse;
  font-family: Arial, sans-serif;
  font-size: 16px;
}

.totals-table td {
  padding: 10px 15px;
  text-align: left;
}

.totals-label {
  color: #6c757d;
}

.totals-value {
  color: black;
  text-align: right;
}

.totals-item-total .totals-label {
  font-weight: bold;
  color: #6c757d;
}

.totals-item-total .totals-value {
  font-weight: bold;
  color: black;
}

/* Buttons Styling */
.totals-buttons {
  display: flex;
  gap: 10px; 
}

.checkout,
.continue-shopping {
  padding: 10px 20px;
  font-size: 16px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.checkout {
  background-color: #6b6;
  color: white;
}

.checkout:hover {
  background-color: #494;
}

.continue-shopping {
  background-color: #0d6efd;
  color: white;
}

.continue-shopping:hover {
  background-color: #084298;
}




  /* Breadcrumb Styling */
.breadcrumb {
  font-size: 16px;
  margin-bottom: 20px;
  font-family: 'HelveticaNeue-Light', 'Helvetica Neue Light', 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

.breadcrumb-item {
  text-decoration: none;
  color: #17a2b8; 
  transition: color 0.3s ease;
}

.breadcrumb-item:hover {
  color: red; 
}

.breadcrumb-divider {
  margin: 0 5px;
  color: #6c757d;
}

.breadcrumb-item.current {
  color: #6c757d;
  font-weight: bold;
}


.button-container {
  display: flex;
  gap: 10px; 
}

.button-container .checkout {
  margin: 0; 
}

#shop{
  color : #fff;

}
#shop:hover{
  color: red;
}

/* Container styling for the quantity section */
.quantity-container {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 5px; /* Space between buttons and quantity display */
}

/* Styling for the buttons */
.quantity-btn {
  background-color: #f0f0f0;
  border: 1px solid #ccc;
  border-radius: 5px;
  width: 30px;
  height: 30px;
  font-size: 18px;
  font-weight: bold;
  color: #333;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
}

.quantity-btn:hover {
  background-color: #e0e0e0;
  border-color: #888;
}

/* Styling for the quantity display box */
.quantity-display {
  font-size: 16px;
  font-weight: bold;
  padding: 5px 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  text-align: center;
  width: 40px;
  background-color: #fff;
}

.cartProduct{
  display: flex;
}

.empty-cart{
  width : 500px;
}




.shopping-cart{
  margin-bottom: 40px;;
}







.column-labels {
    display: grid;
    grid-template-columns: 1fr 2fr 2fr 1fr 1fr 1fr 1fr;
    gap: 10px;
    font-weight: bold;
    text-align: center;
    margin-bottom: 20px;
}

.cart-item-row {
    display: grid;
    grid-template-columns: 1fr 2fr 2fr 1fr 1fr 1fr 1fr;
    gap: 10px;
    align-items: center;
    margin-bottom: 15px;
    border-bottom: 1px solid #ddd;
    padding: 10px 0;
}

.cart-item-row img {
    max-width: 100px;
    max-height: 100px;
}

.quantity-container {
    display: flex;
    justify-content: center;
    align-items: center;
}

.quantity-btn {
    background-color: #ccc;
    border: none;
    padding: 5px 10px;
    cursor: pointer;
    font-size: 14px;
}

.quantity-btn:hover {
    background-color: #aaa;
}

.product-removal a {
    color: white;
    text-decoration: none;
}

.empty-cart {
    text-align: center;
    padding: 50px;
}






  
  @media screen and (max-width: 650px) {
    .column-labels {
      display: none;
    }
  
    .product {
      grid-template-columns: 25% auto;
      grid-row-gap: 10px;
      border-bottom: 1px solid #eee;
    }
  
    .product-image {
      grid-column: 1 / span 2;
      text-align: center;
    }
  
    .product-details,
    .product-price,
    .product-quantity,
    .product-removal,
    .product-line-price {
      grid-column: 1 / span 2;
      text-align: center;
    }
  
    .totals .totals-item {
      flex-direction: column;
      align-items: flex-end;
    }
  
    .totals .totals-item label {
      width: auto;
      text-align: left;
      margin-bottom: 5px;
    }
  }
  
  @media screen and (max-width: 350px) {
    .checkout {
      width: 100%;
      font-size: 16px;
    }
  }
  </style>
  
  
  <div class="breadcrumb">
    <a href="/" class="breadcrumb-item">Home</a>
    <span class="breadcrumb-divider">></span>
    <a href="/shop" class="breadcrumb-item">Shop</a>
    <span class="breadcrumb-divider">></span>
    <span class="breadcrumb-item current">Cart</span>
  </div>
  
  
  
    <!-- ------------------------------------------------------------------------------- -->

    <div class="shopping-cart">

      <% if (cartData.length > 0) { %>
          <div class="column-labels">
              <label>Order No.</label>
              <label class="product-image">Image</label>
              <label class="product-details">Product</label>
              <label class="product-price">Price</label>
              <label class="product-quantity">Quantity</label>
              <label class="product-line-price">Total</label>
              <label class="product-removal">Remove</label>
          </div>
  
          <% cartData.forEach((item, index) => { %>
              <div class="cart-item-row">
                  <div class="order-number">#<%= index + 1 %></div>
  
                  <div class="product-image">
                      <a href="/product-details?id=<%= item.productId._id %>">
                          <img src="/uploads/re-image/<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>">
                      </a>
                  </div>
  
                  <div class="product-details">
                      <div class="product-title"><%= item.productId.productName %></div>
                      <h5 class="product-description"><%= item.productId.description %></h5>
                  </div>
  
                  <div class="product-price" id="price<%= index %>">₹<%= item.price %></div>
  
                  <div class="product-quantity">
                      <div class="quantity-container">
                          <button class="quantity-btn decrement" onclick="cartDec('<%= item.productId._id %>', '<%= index %>')">-</button>
                          <span class="quantity-display" id="quantity<%= index %>"><%= item.quantity %></span>
                          <button class="quantity-btn increment" onclick="cartInc('<%= item.productId._id %>', '<%= index %>')">+</button>
                      </div>
                  </div>
  
                  <div class="product-line-price" id="totalPrice<%= index %>">₹<%= item.totalPrice %></div>
  
                  <div class="product-removal">
                      <button class="btn btn-danger">
                          <a href="javascript:void(0);" onclick="confirmRemoveProduct('<%= item.productId._id %>', '<%= item.productId.productName %>')">Remove</a>
                      </button>
                  </div>
              </div>
          <% }) %>
      <% } else { %>
          <div class="empty-cart">
              <h2>Your cart is empty!!!</h2>
              <button class="btn btn-success">
                  <a href="/shop" style="color: white; text-decoration: none;">Start shopping</a>
              </button>
          </div>
      <% } %>
  
  </div>
  


    <!-- ------------------------------------------------------------------------------- -->


    <div class="totals-container">
      <div class="totals-table-container">
        <table class="totals-table">
          <tbody>
            <tr>
              <td class="totals-label">Subtotal : </td>
              <td class="totals-value" id="sub-total-price">₹ <%= grandTotal %></td>
            </tr>
            
          </tbody>
        </table>
      </div>
      <div class="totals-buttons">
        <button class="checkout" id="checkout">Proceed to Checkout</button>
        <button class="continue-shopping" id="shop">Continue Shopping</button>

      </div>
    </div>
    
    
  
  </div>



  <%- include("../../views/partials/user/footer") %>


  <script>


document.getElementById('shop').addEventListener('click', function () {
  window.location.href = '/shop'; 
});

document.getElementById('checkout').addEventListener('click', function () {
  window.location.href = '/checkout'; 
});






// -----------------------delete cart--------

  

function confirmRemoveProduct(productId, productName) {
    Swal.fire({
        title: 'Are you sure?',
        text: "Do you want to remove this product from your cart?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, remove it!',
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            // Send delete request via fetch to remove the product
            fetch(`/removeFromCart?id=${productId}`)
                .then((response) => {
                    if (response.ok) {
                        // Display success message after deletion
                        Swal.fire({
                            title: 'Removed!',
                            text: `${productName} has been removed from your cart.`,
                            icon: 'success',
                            timer: 4000,
                            showConfirmButton: false
                        });

                        // Reload the page after a short delay to update the cart view
                        setTimeout(() => {
                            window.location.reload();
                        }, 1500);
                    } else {
                        // Handle failure response
                        Swal.fire({
                            title: 'Error!',
                            text: 'Failed to remove the product from your cart.',
                            icon: 'error'
                        });
                    }
                })
                .catch((error) => {
                    console.error('Error removing product:', error);
                    Swal.fire({
                        title: 'Error!',
                        text: 'An unexpected error occurred.',
                        icon: 'error'
                    });
                });
        }
    });
}



//---------------------dec qty----------------------------------------



async function cartDec(id, index) {
  try {
    // Select the required elements from the DOM
    let quantity = document.getElementById('quantity' + index);
    let price = document.getElementById('price' + index);
    let totalPrice = document.getElementById('totalPrice'+index);
    let subTotal = document.getElementById('sub-total-price');

    // Check if the current quantity is 1, alert the user
    if (Number(quantity.innerText) === 1) {
      return Swal.fire({
        icon: "warning",
        title: "Minimum One Quantity",
        text: "Please select at least one quantity",
      });
    }

    // Send a PUT request to the backend for decrementing the quantity
    let response = await fetch(`/getCart/decQty/${id}`, { method: 'PUT' });
    let data = await response.json();

    if (data.success) {
      // Update the quantity in the UI
      quantity.innerText = data.updatedItem.quantity;

      // Update total price for the product and grand total
      totalPrice.innerText = '₹' + data.updatedItem.totalPrice;
      subTotal.innerText = '₹' + data.grandTotal;

      // Show success notification
      Swal.fire({
        icon: "success",
        title: "Quantity Updated",
        text: `Quantity for ${data.updatedItem.productName} has been decreased.`,
        timer: 1500,
        showConfirmButton: false,
      });
    }
  } catch (error) {
    console.error("Error in cartDec:", error);
    Swal.fire({
      icon: "error",
      title: "Error",
      text: "An error occurred while updating the quantity.",
    });
  }
}


//-------------------------------------------------incQty---------------

async function cartInc(id, index) {
  try {
    // Select the required elements from the DOM
    let quantity = document.getElementById('quantity' + index);
    let price = document.getElementById('price' + index);
    let totalPrice = document.getElementById('totalPrice' + index);
    let subTotal = document.getElementById('sub-total-price');

    // Check if the quantity has reached the maximum allowed limit (8)
    if (Number(quantity.innerText) >= 8) {
      return Swal.fire({
        icon: "warning",
        title: "Max Quantity Reached",
        text: "You cannot purchase more than 8 items of this product.",
      });
    }

    // Send a PUT request to the backend for incrementing the quantity
    let response = await fetch(`/getCart/incQty/${id}`, { method: 'PUT' });
    let data = await response.json();

    if (data.success) {
      // Update the quantity in the UI
      quantity.innerText = data.updatedItem.quantity;

      // Update total price for the product and grand total
      totalPrice.innerText = '₹' + data.updatedItem.totalPrice;
      subTotal.innerText = '₹' + data.grandTotal;

      // Show success notification
      Swal.fire({
        icon: "success",
        title: "Quantity Updated",
        text: `Quantity for ${data.updatedItem.productName} has been increased.`,
        timer: 1500,
        showConfirmButton: false,
      });
    }
  } catch (error) {
    console.error("Error in cartInc:", error);
    Swal.fire({
      icon: "error",
      title: "Error",
      text: "An error occurred while updating the quantity.",
    });
  }
}








  


  </script>
  